@using InventoryManager.Models
@using JsonResult = InventoryManager.ViewModel.JsonResult
@model InventoryManager.ViewModel.HardwareView
@{
    ViewBag.Title = Model.Hardware.Inventory.Name;

    Layout = "../Shared/_FormLayout.cshtml";
}


@section PageHead{
    <h2>@Model.Hardware.Inventory.Name <span class="label label-@Model.Hardware.Inventory.Status">@Model.Hardware.Inventory.Status</span></h2>
    @if (User.IsInRole(ApplicationUser.ADMIN) || User.IsInRole(ApplicationUser.MANAGER) || User.IsInRole(ApplicationUser.CUSTOMER_MANAGER))
    {
        <div class="info">
            <span class="info-type"><i class="fa fa-user"></i> Owner: </span>
            <span class="link">
                <a href="@Url.Action("Show", "Customer", new {@Model.Hardware.Inventory.Owner.Id})">@Model.Hardware.Inventory.Owner.Name</a>
            </span>
        </div>
    }
}

@section MenuControls {
    <ul>
        @if (User.IsInRole(ApplicationUser.ADMIN) || User.IsInRole(ApplicationUser.MANAGER) || User.IsInRole(ApplicationUser.CUSTOMER_MANAGER))
        {
            <li>
                <a href="@Url.Action("Index", "History", new {Id = Model.Hardware.Inventory.Id})">
                    <i class="fa fa-list"></i> View History
                </a>
            </li>
        }

        @if (User.IsInRole(ApplicationUser.ADMIN))
        {
            <li>
                <a href="@Url.Action("Delete", "Hardware", new {Id = Model.Hardware.Id})">
                    <i class="fa fa-trash"></i> Delete
                </a>
            </li>
        }

        @if (Model.Hardware.Inventory.Status == InventoryStatus.Pending || User.IsInRole(ApplicationUser.ADMIN) || User.IsInRole(ApplicationUser.MANAGER) || User.IsInRole(ApplicationUser.CUSTOMER_MANAGER))
        {
            <li>
                <a href="@Url.Action("Edit", "Hardware", new {Id = Model.Hardware.Id})">
                    <i class="fa fa-pencil"></i> Edit
                </a>
            </li>
        }
    </ul>
}

@Html.AntiForgeryToken()

@{Html.RenderPartial("_form_view");}

@{Html.RenderPartial("__form_images");}

@section scripts{
    <script>
        $(document).ready(function () {

            $(".img-display").click(function () {
                $("#image-display").attr("src", $(this).attr("data-image-url"));
            });

            $(".img-delete").click(function() {
                $("input#image-id").val($(this).attr("data-document-id"));
            });

            $("#btn-delete-document").click(function () {
                var message = "";

                var data = new FormData($("#form-delete-document")[0]);
                $.ajax({
                    url: "@Url.Action("Delete", "Document")",
                    type: "POST",
                    data: data,
                    processData: false,
                    contentType: false,
                    success: function (result) {
                        if (result["ResponseStatus"] === 1) {
                            location.reload();
                        }
                    },
                    error: function() {
                        message = '<div class="alert alert-danger">Cannot Delete Image</div>';
                        $("#delete-box .msg").html(message);
                    }
                });
            });

            $("#btn-upload").click(function () {
                $("#upload-box .msg").html("");
                var message = "";

                if ($("#file-name").val() === "") {
                    message = '<div class="alert alert-danger">Please Enter a Document Name</div>';
                    $("#upload-box .msg").html(message);
                    return false;
                }

                if ($("#file-input").val() !== "") {

                    var data = new FormData($("#form-upload")[0]);
                    
                    $.ajax({
                        url: "@Url.Action("Add", "Document", new {InventoryId =  @Model.Hardware.Inventory.Id})",
                        type: 'POST',
                        data: data,
                        contentType: false,
                        processData: false,
                        success: function (result) {
                            if (result.hasOwnProperty('ResponseStatus')) {
                                switch (result['ResponseStatus']) {
                                case 0:
                                    message = '<div class="alert alert-danger">' + result['Message'] + '</div>';
                                    break;

                                case 1:
                                    message = '<div class="alert alert-success">' + result['Message'] + '</div>';
                                    location.reload();
                                    break;

                                default:
                                    message = '<div class="alert alert-danger">Cannot Upload File</div>';
                                    break;
                                }
                            } else {
                                message = '<div class="alert alert-danger">Cannot Upload File</div>';
                            }
                        },
                        error: function(){
                            message = '<div class="alert alert-danger">Cannot Connect to Server</div>';
                        },
                        complete: function() {
                            $("#upload-box .msg").html(message);
                        }
                    });

                } else {
                    message = '<div class="alert alert-danger">Please Select File to Upload</div>';
                    $("#upload-box .msg").html(message);
                }
                
            });
            
        })
    </script>
}